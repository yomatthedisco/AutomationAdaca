{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2025-10-05T18:28:24.170Z",
    "end": "2025-10-05T18:29:41.220Z",
    "duration": 77050,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "028b8b11-8b46-4d0b-87fd-d41ee6f651b1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4859400c-d805-4485-820a-d9ee93b8a6ff",
          "title": "Inventory Page Tests",
          "fullFile": "C:\\Users\\Memes\\Documents\\AutomationAdaca\\tests\\inventory.test.js",
          "file": "\\tests\\inventory.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"before all\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 626,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver();\nloginPage = new LoginPage(driver);\ninventoryPage = new InventoryPage(driver);",
              "err": {},
              "uuid": "ecdf1e7e-ae6e-469f-a0ac-7b5127d182c0",
              "parentUUID": "4859400c-d805-4485-820a-d9ee93b8a6ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"after all\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 39,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) await driver.quit();",
              "err": {},
              "uuid": "8a5ed3ba-2824-4bd2-9fa9-dbe6e2133acd",
              "parentUUID": "4859400c-d805-4485-820a-d9ee93b8a6ff",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"after each\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 125,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest && driver) {\n  try {\n    const { saveScreenshot } = require(\"../utils/driver\");\n    const addContext = require(\"mochawesome/addContext\");\n    const state = this.currentTest.state || \"unknown\";\n    const safeName = `${this.currentTest.title}__${state}`.replace(/[^a-z0-9\\-]/gi, \"_\").toLowerCase();\n    const destUnderReport = `mochawesome-report/screenshots/${safeName}.png`;\n    await saveScreenshot(driver, destUnderReport);\n    const reportRelativePath = `screenshots/${safeName}.png`;\n    addContext(this, reportRelativePath);\n  } catch (err) {\n    console.warn(\"[WARN] Could not capture screenshot:\", err && err.message ? err.message : err);\n  }\n}",
              "err": {},
              "uuid": "a1fba926-a514-40c6-b179-1169bc4b24dd",
              "parentUUID": "4859400c-d805-4485-820a-d9ee93b8a6ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add to cart single item scenario",
              "fullTitle": "Inventory Page Tests Add to cart single item scenario",
              "timedOut": false,
              "duration": 24438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"screenshots/add_to_cart_single_item_scenario__failed.png\"",
              "code": "const itemName = \"Sauce Labs Backpack\";\nawait loginPage.open();\nawait loginPage.login(testData.validUser.username, testData.validUser.password);\nconsole.log(\"Verifying landed on Swag Labs page...\");\nexpect(await inventoryPage.isAtInventoryPage()).to.be.true;\nconsole.log(`Adding item to cart: ${itemName}`);\nawait inventoryPage.addToCartByName(itemName);\nconsole.log(\"Verifying Remove button visible...\");\nconst removeVisible = await inventoryPage.isRemoveButtonVisible(itemName);\nexpect(removeVisible).to.be.true;\nconsole.log(\"Clicking cart button...\");\nawait inventoryPage.clickCart();\nconsole.log(\"Verifying at Cart page...\");\nexpect(await inventoryPage.isAtCartPage()).to.be.true;\nconsole.log(\"Verifying item present in cart...\");\nexpect(await inventoryPage.isItemInCart(itemName)).to.be.true;",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (tests\\inventory.test.js:55:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "882c81d8-2544-4b15-a592-476bff36d672",
              "parentUUID": "4859400c-d805-4485-820a-d9ee93b8a6ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete an item in Product Page",
              "fullTitle": "Inventory Page Tests Delete an item in Product Page",
              "timedOut": false,
              "duration": 23679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"screenshots/delete_an_item_in_product_page__passed.png\"",
              "code": "const itemName = \"Sauce Labs Backpack\";\nawait loginPage.open();\nawait loginPage.login(testData.validUser.username, testData.validUser.password);\nexpect(await inventoryPage.isAtInventoryPage()).to.be.true;\nawait inventoryPage.addToCartByName(itemName);\nexpect(await inventoryPage.isRemoveButtonVisible(itemName)).to.be.true;\nconsole.log(\"Removing the item from product page...\");\nawait inventoryPage.removeFromCartByName(itemName);\n// After remove, the remove button should no longer be present; the add button should be present instead\nconst stillRemoveVisible = await inventoryPage.isRemoveButtonVisible(itemName);\nexpect(stillRemoveVisible).to.be.false;",
              "err": {},
              "uuid": "60aafae7-ea62-4549-97f5-9ebc7e90aa59",
              "parentUUID": "4859400c-d805-4485-820a-d9ee93b8a6ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60aafae7-ea62-4549-97f5-9ebc7e90aa59"
          ],
          "failures": [
            "882c81d8-2544-4b15-a592-476bff36d672"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "ae264312-b98c-4b0b-919a-29fb6893b97f",
          "title": "Login Page Tests",
          "fullFile": "C:\\Users\\Memes\\Documents\\AutomationAdaca\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"before all\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 594,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"[SETUP] Initializing WebDriver...\");\ntry {\n  driver = await createDriver();\n  loginPage = new LoginPage(driver);\n  console.log(\"[SETUP] WebDriver initialized successfully.\");\n} catch (err) {\n  console.error(\"[ERROR] Failed to initialize WebDriver:\", err);\n  throw err; // Stop tests if WebDriver fails\n}",
              "err": {},
              "uuid": "a3017cc7-31f1-4ace-a530-7beb5483c645",
              "parentUUID": "ae264312-b98c-4b0b-919a-29fb6893b97f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"after all\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  try {\n    console.log(\"[TEARDOWN] Closing browser...\");\n    await driver.quit();\n    console.log(\"[TEARDOWN] Browser closed successfully.\");\n  } catch (err) {\n    console.error(\"[WARN] Error closing browser:\", err);\n  }\n}",
              "err": {},
              "uuid": "d591af5f-e7a7-40f8-8152-c0953714943c",
              "parentUUID": "ae264312-b98c-4b0b-919a-29fb6893b97f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"after each\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 72,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest && driver) {\n  try {\n    const { saveScreenshot } = require(\"../utils/driver\");\n    const addContext = require(\"mochawesome/addContext\");\n    const state = this.currentTest.state || \"unknown\";\n    const safeName = `${this.currentTest.title}__${state}`.replace(/[^a-z0-9\\-]/gi, \"_\").toLowerCase();\n    const destUnderReport = `mochawesome-report/screenshots/${safeName}.png`;\n    await saveScreenshot(driver, destUnderReport);\n    const reportRelativePath = `screenshots/${safeName}.png`;\n    addContext(this, reportRelativePath);\n  } catch (err) {\n    console.warn(\"[WARN] Could not capture screenshot:\", err && err.message ? err.message : err);\n  }\n}",
              "err": {},
              "uuid": "287365db-e3ce-458a-a21b-d58205cc2d6c",
              "parentUUID": "ae264312-b98c-4b0b-919a-29fb6893b97f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login successfully with valid credentials",
              "fullTitle": "Login Page Tests should login successfully with valid credentials",
              "timedOut": false,
              "duration": 13805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"screenshots/should_login_successfully_with_valid_credentials__passed.png\"",
              "code": "console.log(\"[TEST] Opening login page...\");\nawait loginPage.open();\nconsole.log(\"[TEST] Logging in with valid credentials...\");\nawait loginPage.login(testData.validUser.username, testData.validUser.password);\nconsole.log(\"[TEST] Waiting for page title to contain 'Swag Labs'...\");\nawait loginPage.waitForPageTitleContains(\"Swag Labs\");\nconst title = await driver.getTitle();\nconsole.log(`[ASSERT] Page title received: ${title}`);\nexpect(title).to.include(\"Swag Labs\");",
              "err": {},
              "uuid": "4df39d5d-7781-45d1-9650-11d2a5b70869",
              "parentUUID": "ae264312-b98c-4b0b-919a-29fb6893b97f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message for invalid credentials",
              "fullTitle": "Login Page Tests should display error message for invalid credentials",
              "timedOut": false,
              "duration": 13374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"screenshots/should_display_error_message_for_invalid_credentials__passed.png\"",
              "code": "console.log(\"[TEST] Opening login page...\");\nawait loginPage.open();\nconsole.log(\"[TEST] Logging in with invalid credentials...\");\nawait loginPage.login(testData.invalidUser.username, testData.invalidUser.password);\nconsole.log(\"[TEST] Fetching error message...\");\nconst error = await loginPage.getErrorMessage();\nconsole.log(`[ASSERT] Error message received: ${error}`);\nexpect(error).to.contain(\"Epic sadface\");",
              "err": {},
              "uuid": "6e9552b0-5eeb-40dc-a353-3e4fe4307ee9",
              "parentUUID": "ae264312-b98c-4b0b-919a-29fb6893b97f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4df39d5d-7781-45d1-9650-11d2a5b70869",
            "6e9552b0-5eeb-40dc-a353-3e4fe4307ee9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}