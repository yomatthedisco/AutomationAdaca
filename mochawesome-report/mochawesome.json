{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2025-10-05T18:38:50.168Z",
    "end": "2025-10-05T18:40:08.582Z",
    "duration": 78414,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e8c6084-af98-4464-aa34-289febff6eaf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
          "title": "Inventory Page Tests",
          "fullFile": "C:\\Users\\Memes\\Documents\\AutomationAdaca\\tests\\inventory.test.js",
          "file": "\\tests\\inventory.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"before all\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 676,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await createDriver();\nloginPage = new LoginPage(driver);\ninventoryPage = new InventoryPage(driver);",
              "err": {},
              "uuid": "03a49ded-df79-41b6-b908-aeca49a618ac",
              "parentUUID": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"after all\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) await driver.quit();\n// Print a short test summary\nrecordTest(this.test);\nprintSummary();",
              "err": {},
              "uuid": "1bedce6d-e838-402b-8e23-9b5a1450f195",
              "parentUUID": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Inventory Page Tests\"",
              "fullTitle": "Inventory Page Tests \"after each\" hook in \"Inventory Page Tests\"",
              "timedOut": false,
              "duration": 107,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest && driver) {\n  try {\n    const { saveScreenshot } = require(\"../utils/driver\");\n    const addContext = require(\"mochawesome/addContext\");\n    const state = this.currentTest.state || \"unknown\";\n    const ts = new Date().toISOString().replace(/[:.]/g, \"-\");\n    const safeName = `${this.currentTest.title}__${state}__${ts}`.replace(/[^a-z0-9\\-]/gi, \"_\").toLowerCase();\n    const destUnderReport = `mochawesome-report/screenshots/${safeName}.png`;\n    await saveScreenshot(driver, destUnderReport);\n    const reportRelativePath = `screenshots/${safeName}.png`;\n    addContext(this, reportRelativePath);\n    // record test outcome\n    recordTest(this.currentTest);\n  } catch (err) {\n    console.warn(\"[WARN] Could not capture screenshot:\", err && err.message ? err.message : err);\n  }\n}",
              "err": {},
              "uuid": "7a126afc-a9e6-4cef-b3e4-5617db0b7115",
              "parentUUID": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add to cart single item scenario",
              "fullTitle": "Inventory Page Tests Add to cart single item scenario",
              "timedOut": false,
              "duration": 24779,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"screenshots/add_to_cart_single_item_scenario__failed__2025-10-05t18-39-15-629z.png\"",
              "code": "const itemName = testData.testItem.name;\nconsole.log(`[TEST] Starting Add to cart scenario for item: ${itemName}`);\ntry {\nawait loginPage.open();\nawait loginPage.login(testData.validUser.username, testData.validUser.password);\nconsole.log(\"Verifying landed on Swag Labs page...\");\nexpect(await inventoryPage.isAtInventoryPage()).to.be.true;\nconst displayed = await inventoryPage.addToCartByName(itemName);\nconsole.log(`Added item name returned: ${displayed}`);\nconsole.log(\"Verifying Remove button visible...\");\nconst removeVisible = await inventoryPage.isRemoveButtonVisible(itemName);\nexpect(removeVisible).to.be.true;\nconsole.log(\"Clicking cart button...\");\nawait inventoryPage.clickCart();\nconsole.log(\"Verifying at Cart page...\");\nexpect(await inventoryPage.isAtCartPage()).to.be.true;\nconsole.log(\"Verifying item present in cart...\");\nexpect(await inventoryPage.isItemInCart(displayed)).to.be.true;\n} catch (err) {\n  console.error(\"[ERROR] Add to cart scenario failed:\", err && err.message ? err.message : err);\n  throw err;\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(css selector, span.shopping_cart_link)\nWait timed out after 10046ms",
                "estack": "TimeoutError: Waiting for element to be located By(css selector, span.shopping_cart_link)\nWait timed out after 10046ms\n    at C:\\Users\\Memes\\Documents\\AutomationAdaca\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "91aaaeae-a21f-491b-80e8-be00855a8721",
              "parentUUID": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete an item in Product Page",
              "fullTitle": "Inventory Page Tests Delete an item in Product Page",
              "timedOut": false,
              "duration": 23874,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"screenshots/delete_an_item_in_product_page__failed__2025-10-05t18-39-39-622z.png\"",
              "code": "const itemName = testData.testItem.name;\nconsole.log(`[TEST] Starting Delete item scenario for item: ${itemName}`);\ntry {\n  await loginPage.open();\n  await loginPage.login(testData.validUser.username, testData.validUser.password);\n  expect(await inventoryPage.isAtInventoryPage()).to.be.true;\n  await inventoryPage.addToCartByName(itemName);\n  expect(await inventoryPage.isRemoveButtonVisible(itemName)).to.be.true;\n  console.log(\"Removing the item from product page...\");\n  await inventoryPage.removeFromCartByName(itemName);\n  // After remove, the remove button should no longer be present; the add button should be present instead\n  const stillRemoveVisible = await inventoryPage.isRemoveButtonVisible(itemName);\n  expect(stillRemoveVisible).to.be.false;\n} catch (err) {\n  console.error(\"[ERROR] Delete item scenario failed:\", err && err.message ? err.message : err);\n  throw err;\n}",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(xpath, //div[text()=\"Sauce Labs Backpack\"]//ancestor::div[contains(@class,'inventory_item')]//button[text()='Add to cart'])\nWait timed out after 10213ms",
                "estack": "TimeoutError: Waiting for element to be located By(xpath, //div[text()=\"Sauce Labs Backpack\"]//ancestor::div[contains(@class,'inventory_item')]//button[text()='Add to cart'])\nWait timed out after 10213ms\n    at C:\\Users\\Memes\\Documents\\AutomationAdaca\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "355a0c3a-881b-4beb-97c0-77f9a806fc21",
              "parentUUID": "91215a9a-aea6-4b6c-9b30-38ac020a5117",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "91aaaeae-a21f-491b-80e8-be00855a8721",
            "355a0c3a-881b-4beb-97c0-77f9a806fc21"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
          "title": "Login Page Tests",
          "fullFile": "C:\\Users\\Memes\\Documents\\AutomationAdaca\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"before all\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 622,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"[SETUP] Initializing WebDriver...\");\ntry {\n  driver = await createDriver();\n  loginPage = new LoginPage(driver);\n  console.log(\"[SETUP] WebDriver initialized successfully.\");\n} catch (err) {\n  console.error(\"[ERROR] Failed to initialize WebDriver:\", err);\n  throw err; // Stop tests if WebDriver fails\n}",
              "err": {},
              "uuid": "8f4cdf56-d2e7-41dd-af1d-40145696d863",
              "parentUUID": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"after all\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  try {\n    console.log(\"[TEARDOWN] Closing browser...\");\n    await driver.quit();\n    console.log(\"[TEARDOWN] Browser closed successfully.\");\n  } catch (err) {\n    console.error(\"[WARN] Error closing browser:\", err);\n  }\n}\n// Print a short test summary\nrecordTest(this.test); // record the suite test if any\nprintSummary();",
              "err": {},
              "uuid": "96703392-a08f-4154-80f6-b48df8c0e0b6",
              "parentUUID": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login Page Tests\"",
              "fullTitle": "Login Page Tests \"after each\" hook in \"Login Page Tests\"",
              "timedOut": false,
              "duration": 75,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest && driver) {\n  try {\n    const { saveScreenshot } = require(\"../utils/driver\");\n    const addContext = require(\"mochawesome/addContext\");\n    const state = this.currentTest.state || \"unknown\";\n    const ts = new Date().toISOString().replace(/[:.]/g, \"-\");\n    const safeName = `${this.currentTest.title}__${state}__${ts}`.replace(/[^a-z0-9\\-]/gi, \"_\").toLowerCase();\n    const destUnderReport = `mochawesome-report/screenshots/${safeName}.png`;\n    await saveScreenshot(driver, destUnderReport);\n    const reportRelativePath = `screenshots/${safeName}.png`;\n    addContext(this, reportRelativePath);\n    // record test outcome\n    const { recordTest } = require(\"../utils/testReporter\");\n    recordTest(this.currentTest);\n  } catch (err) {\n    console.warn(\"[WARN] Could not capture screenshot:\", err && err.message ? err.message : err);\n  }\n}",
              "err": {},
              "uuid": "fff777d9-2417-486a-9e11-e1f0ec806ddd",
              "parentUUID": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login successfully with valid credentials",
              "fullTitle": "Login Page Tests should login successfully with valid credentials",
              "timedOut": false,
              "duration": 14435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"screenshots/should_login_successfully_with_valid_credentials__passed__2025-10-05t18-39-54-830z.png\"",
              "code": "console.log(\"[TEST] Opening login page...\");\nawait loginPage.open();\nconsole.log(\"[TEST] Logging in with valid credentials...\");\nawait loginPage.login(testData.validUser.username, testData.validUser.password);\nconsole.log(\"[TEST] Waiting for page title to contain 'Swag Labs'...\");\nawait loginPage.waitForPageTitleContains(\"Swag Labs\");\nconst title = await driver.getTitle();\nconsole.log(`[ASSERT] Page title received: ${title}`);\nexpect(title).to.include(\"Swag Labs\");",
              "err": {},
              "uuid": "b06bc2a6-2e82-41ee-b9fe-cf6a14a424f6",
              "parentUUID": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message for invalid credentials",
              "fullTitle": "Login Page Tests should display error message for invalid credentials",
              "timedOut": false,
              "duration": 13521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"screenshots/should_display_error_message_for_invalid_credentials__passed__2025-10-05t18-40-08-462z.png\"",
              "code": "console.log(\"[TEST] Opening login page...\");\nawait loginPage.open();\nconsole.log(\"[TEST] Logging in with invalid credentials...\");\nawait loginPage.login(testData.invalidUser.username, testData.invalidUser.password);\nconsole.log(\"[TEST] Fetching error message...\");\nconst error = await loginPage.getErrorMessage();\nconsole.log(`[ASSERT] Error message received: ${error}`);\nexpect(error).to.contain(\"Epic sadface\");",
              "err": {},
              "uuid": "749bdd7c-aaa4-45fc-b916-561ff74be1e2",
              "parentUUID": "8caff995-adc8-43b9-ab23-825cf7a76b7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b06bc2a6-2e82-41ee-b9fe-cf6a14a424f6",
            "749bdd7c-aaa4-45fc-b916-561ff74be1e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27956,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}